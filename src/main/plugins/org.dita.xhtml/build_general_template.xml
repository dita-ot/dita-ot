<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is part of the DITA Open Toolkit project hosted on 
     Sourceforge.net. See the accompanying license.txt file for 
     applicable licenses.-->
<!-- (c) Copyright IBM Corp. 2006 All Rights Reserved. -->
<project xmlns:dita="http://dita-ot.sourceforge.net" name="build_generaltargets">

  <target name="xhtml.init">
    <dita-ot-fail id="DOTA007E">
      <condition>
        <and>
          <isset property="args.ftr" />
          <not>
            <available file="${args.ftr}" type="file"/>
          </not>
        </and>
      </condition>
      <param name="1" value="${args.ftr}"/>
    </dita-ot-fail>
    <dita-ot-fail id="DOTA008E">
      <condition>
        <and>
          <isset property="args.hdr" />
          <not>
            <available file="${args.hdr}" type="file"/>
          </not>
        </and>
      </condition>
      <param name="1" value="${args.hdr}"/>
    </dita-ot-fail>
    <dita-ot-fail id="DOTA009E">
      <condition>
        <and>
          <isset property="args.hdf" />
          <not>
            <available file="${args.hdf}" type="file"/>
          </not>
        </and>
      </condition>
      <param name="1" value="${args.hdf}"/>
    </dita-ot-fail>
    <!-- begin to check and init css relevant properties -->
    <condition property="user.csspath.url">
      <or>
        <contains string="${args.csspath}" substring="http://" />
        <contains string="${args.csspath}" substring="https://" />
      </or>
    </condition>
    <condition property="args.csspath.absolute">
      <isabsolute path="${args.csspath}" />
    </condition>
    <!-- Set the csspath as default empty directory when there is no user
      input csspath or user input csspath is a local absolute path. -->
    <condition property="user.csspath" value="">
      <or>
        <not>
          <isset property="args.csspath" />
        </not>
        <isset property="args.csspath.absolute" />
      </or>
    </condition>
    <condition property="user.csspath" value="${args.csspath}/">
      <not>
        <isset property="user.csspath" />
      </not>
    </condition>
    <condition property="args.css.real" value="${args.cssroot}${file.separator}${args.css}">
      <isset property="args.cssroot" />
    </condition>
    <condition property="args.css.real" value="${args.css}">
      <not>
        <isset property="args.cssroot" />
      </not>
    </condition>
    <available file="${args.css.real}" property="args.css.present" type="file" />
    <basename property="args.css.file.temp" file="${args.css}" />
    <condition property="args.css.file" value="${args.css.file.temp}">
      <or>
        <isset property="args.css.present" />
        <isset property="user.csspath.url" />
      </or>
    </condition>
    <!-- end to check and init css relevant parameters -->
    <condition property="out.ext" value=".html">
      <not>
        <isset property="out.ext" />
      </not>
    </condition>
    <condition property="html-version" value="xhtml">
      <not>
        <isset property="html-version"/>
      </not>
    </condition>
    <condition property="args.xsl" value="${dita.plugin.org.dita.xhtml.dir}/xsl/dita2${html-version}.xsl">
      <not>
        <isset property="args.xsl" />
      </not>
    </condition>
    <makeurl file="${dita.input.valfile}" property="dita.input.valfile.url" validate="no"/>
    <!-- Set to "true" if you get out-of-memory errors during preprocess
    while processing very large (thousands of files) document sets. -->
    <condition property="dita.xhtml.reloadstylesheet" value="false">
      <not><isset property="dita.xhtml.reloadstylesheet"/></not>
    </condition>
    <antcall target="output-css-warn-message"/>
  </target>
  
  <target name="output-css-warn-message" if="args.csspath.absolute">
    <dita-ot-echo id="DOTA006W" />
  </target>  

  <target name="xhtml.topics"
          depends="xhtml.init,
                   xhtml.image-metadata,
                   dita.topics.html.common,
                   dita.inner.topics.html.common"/>  

  <target name="xhtml.image-metadata" depends="xhtml.image-metadata-check"
          unless="xhtml.image-metadata.skip"
          description="Read image metadata">
    <pipeline message="Read image metadata." taskname="image-metadata" tempdir="${dita.temp.dir}">
      <module class="org.dita.dost.module.ImageMetadataModule">
        <param name="outputdir" location="${output.dir}"/>
      </module>
    </pipeline>
  </target>
  <target name="xhtml.image-metadata-check">
    <condition property="xhtml.image-metadata.skip">
      <isset property="noImagelist"/>
    </condition>
  </target>

  <!--requirement 3, old solution-->
  
  <target name="dita.topics.html.common" unless="noTopic" if="old.transform">
    <xslt basedir="${dita.temp.dir}"
      destdir="${output.dir}" includesfile="${dita.temp.dir}${file.separator}${fullditatopicfile}"
      reloadstylesheet="${dita.xhtml.reloadstylesheet}"
      classpathref="dost.class.path"
      extension="${out.ext}" style="${args.xsl}"
  	  filenameparameter="FILENAME"
  	  filedirparameter="FILEDIR">
      <excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"/>
      <param name="TRANSTYPE" expression="${transtype}" />
      <param name="FILTERFILE" expression="${dita.input.valfile.url}"
        if="dita.input.valfile" />
      <param name="CSS" expression="${args.css.file}"
        if="args.css.file" />
      <param name="CSSPATH" expression="${user.csspath}"
        if="user.csspath" />
      <param name="HDF" expression="${args.hdf}" if="args.hdf" />
      <param name="HDR" expression="${args.hdr}" if="args.hdr" />
      <param name="FTR" expression="${args.ftr}" if="args.ftr" />
      <param name="DRAFT" expression="${args.draft}" if="args.draft" />
      <param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl" />
      <param name="GENERATE-TASK-LABELS" expression="${args.gen.task.lbl}" if="args.gen.task.lbl" />
      <param name="PRESERVE-DITA-CLASS" expression="${args.xhtml.classattr}" if="args.xhtml.classattr"/>
      <param name="NOPARENTLINK" expression="${args.hide.parent.link}" if="args.hide.parent.link"/>
  	  <param name="include.rellinks" expression="${include.rellinks}"/>
      <param name="BREADCRUMBS" expression="${args.breadcrumbs}" if="args.breadcrumbs"/>
      <param name="INDEXSHOW" expression="${args.indexshow}" if="args.indexshow" />
      <param name="genDefMeta" expression="${args.gen.default.meta}" if="args.gen.default.meta" />
      <param name="OUTEXT" expression="${out.ext}" if="out.ext" />
      <param name="BASEDIR" expression="${basedir}"/>
      <param name="OUTPUTDIR" expression="${output.dir}"/>
      <param name="DBG" expression="${args.debug}" if="args.debug"/>
      <dita:extension id="dita.conductor.xhtml.param" behavior="org.dita.dost.platform.InsertAction"/>
      <dita:extension id="dita.conductor.html.param" behavior="org.dita.dost.platform.InsertAction"/>
  	  <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>
  
  <!--To generate&copy inner files-->
  <!--requirement 1,2-->
  
  <target name="dita.inner.topics.html.common" unless="noTopic" if="inner.transform">
    <xslt basedir="${dita.temp.dir}"
      destdir="${output.dir}" includesfile="${dita.temp.dir}${file.separator}${fullditatopicfile}"
      reloadstylesheet="${dita.xhtml.reloadstylesheet}"
      classpathref="dost.class.path"
      extension="${out.ext}" style="${args.xsl}"
      filenameparameter="FILENAME"
      filedirparameter="FILEDIR">
    	<excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"/>
      <param name="TRANSTYPE" expression="${transtype}" />
      <param name="FILTERFILE" expression="${dita.input.valfile.url}"
        if="dita.input.valfile" />
      <param name="CSS" expression="${args.css.file}"
        if="args.css.file" />
      <param name="CSSPATH" expression="${user.csspath}"
        if="user.csspath" />
      <param name="HDF" expression="${args.hdf}" if="args.hdf" />
      <param name="HDR" expression="${args.hdr}" if="args.hdr" />
      <param name="FTR" expression="${args.ftr}" if="args.ftr" />
      <param name="DRAFT" expression="${args.draft}" if="args.draft" />
      <param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl" />
      <param name="GENERATE-TASK-LABELS" expression="${args.gen.task.lbl}" if="args.gen.task.lbl" />
      <param name="PRESERVE-DITA-CLASS" expression="${args.xhtml.classattr}" if="args.xhtml.classattr"/>
      <param name="NOPARENTLINK" expression="${args.hide.parent.link}" if="args.hide.parent.link"/>
      <param name="include.rellinks" expression="${include.rellinks}"/>
      <param name="BREADCRUMBS" expression="${args.breadcrumbs}" if="args.breadcrumbs"/>
      <param name="INDEXSHOW" expression="${args.indexshow}" if="args.indexshow" />
      <param name="genDefMeta" expression="${args.gen.default.meta}" if="args.gen.default.meta" />
      <param name="OUTEXT" expression="${out.ext}" if="out.ext" />
      <param name="BASEDIR" expression="${basedir}"/>
      <param name="OUTPUTDIR" expression="${output.dir}"/>
      <param name="DBG" expression="${args.debug}" if="args.debug"/>
      <dita:extension id="dita.conductor.xhtml.param" behavior="org.dita.dost.platform.InsertAction"/>
      <dita:extension id="dita.conductor.html.param" behavior="org.dita.dost.platform.InsertAction"/>
      <!--New,To generate&copy all dita files in the inputmap.dir,not all files in dita.temp.dir -->
      <mapper type="regexp"
        from="^(${tempdirToinputmapdir.relative.value})(.*?)(\.(\w+))$$" 
        to="\2${out.ext}"/>
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>
  
</project>
