<?xml version="1.0" encoding="UTF-8"?>
<!--=============================================================-->
<!--                   HEADER                                    -->
<!--=============================================================-->
<!-- MODULE:    DITA Subject Scheme Map                          -->
<!-- VERSION:   1.3                                              -->
<!-- DATE:      March 2014                                       -->
<!--                                                             -->
<!--=============================================================-->
<!--=============================================================-->
<!--                   PUBLIC DOCUMENT TYPE DEFINITION           -->
<!--                   TYPICAL INVOCATION                        -->
<!--                                                             -->
<!-- Refer to this file by the following public identifier or an -->
<!--      appropriate system identifier                          -->
<!--PUBLIC "-//OASIS//ELEMENTS DITA Subject Scheme Map//EN"      -->
<!--      Delivered as file "subjectScheme.mod"                       -->
<!--=============================================================-->
<!--SYSTEM:     Darwin Information Typing Architecture (DITA)    -->
<!--                                                             -->
<!--PURPOSE:    Declaring the elements and specialization        -->
<!--            attributes for DITA Subject Scheme Maps          -->
<!--                                                             -->
<!--ORIGINAL CREATION DATE:                                      -->
<!--            February 2008                                    -->
<!--                                                             -->
<!--            (C) Copyright OASIS Open 2008, 2009.             -->
<!--            (C) Copyright IBM Corporation 2005, 2007.        -->
<!--            All Rights Reserved.                             -->
<!--                                                             -->
<!-- UPDATES:                                                    -->
<!--   2008.02.13 RDA: Created file based upon prototype from IBM-->
<!--   2014.04.16 WEK: Redefined as RNG                          -->
<!--=============================================================-->
<xs:schema xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/"
           xmlns:xs="http://www.w3.org/2001/XMLSchema">
<!-- ==================== Import Section ======================= -->
   <xs:import namespace="http://dita.oasis-open.org/architecture/2005/"
              schemaLocation="../../base/xsd/ditaarch.xsd"/>

   <xs:annotation>
      <xs:appinfo>
         <dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(map subjectScheme)</dita:domainsModule>
      </xs:appinfo>
   </xs:annotation>

   <xs:attributeGroup name="topicref-atts-for-subjectScheme">
      <xs:annotation>
         <xs:documentation> This differs from topicref-atts-no-toc only by providing a default for @processing-role </xs:documentation>
      </xs:annotation>
      <xs:attribute name="collection-type">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="choice"/>
               <xs:enumeration value="family"/>
               <xs:enumeration value="sequence"/>
               <xs:enumeration value="unordered"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="type" type="xs:string"/>
      <xs:attribute name="cascade" type="xs:string"/>
      <xs:attribute name="processing-role" default="resource-only">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="normal"/>
               <xs:enumeration value="resource-only"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="scope">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="external"/>
               <xs:enumeration value="local"/>
               <xs:enumeration value="peer"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="locktitle">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="no"/>
               <xs:enumeration value="yes"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="format" type="xs:string"/>
      <xs:attribute name="linking">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="none"/>
               <xs:enumeration value="normal"/>
               <xs:enumeration value="sourceonly"/>
               <xs:enumeration value="targetonly"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="toc" default="no">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="no"/>
               <xs:enumeration value="yes"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="print">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="no"/>
               <xs:enumeration value="printonly"/>
               <xs:enumeration value="yes"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="search">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="no"/>
               <xs:enumeration value="yes"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="chunk" type="xs:string"/>
   </xs:attributeGroup>
   <xs:element name="subjectScheme">
      <xs:annotation>
         <xs:documentation>A subjectScheme is a specialized DITA map that defines a collection of controlled values rather than a collection of topics.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="subjectScheme.class">
               <xs:attribute ref="class" default="- map/map subjectScheme/subjectScheme "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="subjectScheme.class">
      <xs:sequence>
         <xs:group ref="subjectScheme.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="subjectScheme.attributes"/>
   </xs:complexType>
   <xs:group name="subjectScheme.content">
      <xs:sequence>
         <xs:group ref="title" minOccurs="0"/>
         <xs:group ref="topicmeta" minOccurs="0"/>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="anchor"/>
            <xs:group ref="data.elements.incl"/>
            <xs:group ref="enumerationdef"/>
            <xs:group ref="hasInstance"/>
            <xs:group ref="hasKind"/>
            <xs:group ref="hasNarrower"/>
            <xs:group ref="hasPart"/>
            <xs:group ref="hasRelated"/>
            <xs:group ref="navref"/>
            <xs:group ref="relatedSubjects"/>
            <xs:group ref="reltable"/>
            <xs:group ref="schemeref"/>
            <xs:group ref="subjectdef"/>
            <xs:group ref="subjectHead"/>
            <xs:group ref="subjectRelTable"/>
            <xs:group ref="topicref"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="subjectScheme.attributes">
      <xs:attribute name="id" type="xs:ID"/>
      <xs:attributeGroup ref="conref-atts"/>
      <xs:attribute name="anchorref" type="xs:string"/>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attributeGroup ref="localization-atts"/>
      <xs:attributeGroup ref="topicref-atts-for-subjectScheme"/>
      <xs:attributeGroup ref="select-atts"/>
      <xs:attribute ref="ditaarch:DITAArchVersion"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:attributeGroup name="subjectScheme.attlist">
      <xs:attribute ref="ditaarch:DITAArchVersion"/>
      <xs:attributeGroup ref="domains-att"/>
   </xs:attributeGroup>
   <xs:element name="schemeref">
      <xs:annotation>
         <xs:documentation>A &lt;schemeref&gt; element provides a reference to another scheme. Typically, the referenced scheme defines a base set of controlled values extended by the current scheme. The values in the referenced scheme are merged with the current scheme; the result is equivalent to specifying all of the values in a single map.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="schemeref.class">
               <xs:attribute ref="class" default="- map/topicref subjectScheme/schemeref "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="schemeref.class">
      <xs:sequence>
         <xs:group ref="schemeref.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="schemeref.attributes"/>
   </xs:complexType>
   <xs:group name="schemeref.content">
      <xs:sequence>
         <xs:group ref="topicmeta" minOccurs="0"/>
         <xs:group ref="data.elements.incl" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="schemeref.attributes">
      <xs:attribute name="navtitle" type="xs:string"/>
      <xs:attribute name="href" type="xs:string"/>
      <xs:attribute name="keyref" type="xs:string"/>
      <xs:attribute name="keys" type="xs:string"/>
      <xs:attribute name="query" type="xs:string"/>
      <xs:attribute name="processing-role">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="normal"/>
               <xs:enumeration value="resource-only"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="type" type="xs:string" default="scheme"/>
      <xs:attribute name="cascade" type="xs:string"/>
      <xs:attribute name="format" type="xs:string" default="ditamap"/>
      <xs:attribute name="scope">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="external"/>
               <xs:enumeration value="local"/>
               <xs:enumeration value="peer"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="hasNarrower">
      <xs:annotation>
         <xs:documentation>For subjects within the &lt;hasNarrower&gt; element, the container subject is more general than each of the contained subjects. That is, this element makes the default hierarchical relationship explicit, although the way in which a relationship is narrower is not specified.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="hasNarrower.class">
               <xs:attribute ref="class" default="- map/topicref subjectScheme/hasNarrower "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="hasNarrower.class">
      <xs:sequence>
         <xs:group ref="hasNarrower.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="hasNarrower.attributes"/>
   </xs:complexType>
   <xs:group name="hasNarrower.content">
      <xs:sequence>
         <xs:group ref="topicmeta" minOccurs="0"/>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="data.elements.incl"/>
            <xs:group ref="subjectdef"/>
            <xs:group ref="subjectHead"/>
            <xs:group ref="topicref"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="hasNarrower.attributes">
      <xs:attribute name="navtitle" type="xs:string"/>
      <xs:attribute name="href" type="xs:string"/>
      <xs:attribute name="keyref" type="xs:string"/>
      <xs:attribute name="keys" type="xs:string"/>
      <xs:attribute name="scope">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="external"/>
               <xs:enumeration value="local"/>
               <xs:enumeration value="peer"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="processing-role">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="normal"/>
               <xs:enumeration value="resource-only"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="format" type="xs:string"/>
      <xs:attribute name="type" type="xs:string"/>
      <xs:attribute name="cascade" type="xs:string"/>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="hasKind">
      <xs:annotation>
         <xs:documentation>Specifies that the contained hierarchy expresses KIND-OF relationships between subjects.
          </xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="hasKind.class">
               <xs:attribute ref="class" default="- map/topicref subjectScheme/hasKind "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="hasKind.class">
      <xs:sequence>
         <xs:group ref="hasKind.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="hasKind.attributes"/>
   </xs:complexType>
   <xs:group name="hasKind.content">
      <xs:sequence>
         <xs:group ref="topicmeta" minOccurs="0"/>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="data.elements.incl"/>
            <xs:group ref="subjectdef"/>
            <xs:group ref="subjectHead"/>
            <xs:group ref="topicref"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="hasKind.attributes">
      <xs:attribute name="navtitle" type="xs:string"/>
      <xs:attribute name="href" type="xs:string"/>
      <xs:attribute name="keyref" type="xs:string"/>
      <xs:attribute name="keys" type="xs:string"/>
      <xs:attribute name="scope">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="external"/>
               <xs:enumeration value="local"/>
               <xs:enumeration value="peer"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="processing-role">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="normal"/>
               <xs:enumeration value="resource-only"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="format" type="xs:string"/>
      <xs:attribute name="type" type="xs:string"/>
      <xs:attribute name="cascade" type="xs:string"/>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="hasPart">
      <xs:annotation>
         <xs:documentation>The &lt;hasPart&gt; element specifies that the contained hierarchy expresses PART-OF relationships between subjects.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="hasPart.class">
               <xs:attribute ref="class" default="- map/topicref subjectScheme/hasPart "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="hasPart.class">
      <xs:sequence>
         <xs:group ref="hasPart.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="hasPart.attributes"/>
   </xs:complexType>
   <xs:group name="hasPart.content">
      <xs:sequence>
         <xs:group ref="topicmeta" minOccurs="0"/>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="data.elements.incl"/>
            <xs:group ref="subjectdef"/>
            <xs:group ref="subjectHead"/>
            <xs:group ref="topicref"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="hasPart.attributes">
      <xs:attribute name="navtitle" type="xs:string"/>
      <xs:attribute name="href" type="xs:string"/>
      <xs:attribute name="keyref" type="xs:string"/>
      <xs:attribute name="keys" type="xs:string"/>
      <xs:attribute name="scope">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="external"/>
               <xs:enumeration value="local"/>
               <xs:enumeration value="peer"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="processing-role">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="normal"/>
               <xs:enumeration value="resource-only"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="format" type="xs:string"/>
      <xs:attribute name="type" type="xs:string"/>
      <xs:attribute name="cascade" type="xs:string"/>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="hasInstance">
      <xs:annotation>
         <xs:documentation>Specifies that the contained hierarchy expresses INSTANCE-OF relationships between subjects. In an INSTANCE-OF hierarchy, the child subject is a specific entity or object and the parent subject is a type, kind, or class of entity or object. For example, New York City is a specific instance of a city.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="hasInstance.class">
               <xs:attribute ref="class" default="- map/topicref subjectScheme/hasInstance "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="hasInstance.class">
      <xs:sequence>
         <xs:group ref="hasInstance.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="hasInstance.attributes"/>
   </xs:complexType>
   <xs:group name="hasInstance.content">
      <xs:sequence>
         <xs:group ref="topicmeta" minOccurs="0"/>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="data.elements.incl"/>
            <xs:group ref="subjectdef"/>
            <xs:group ref="subjectHead"/>
            <xs:group ref="topicref"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="hasInstance.attributes">
      <xs:attribute name="navtitle" type="xs:string"/>
      <xs:attribute name="href" type="xs:string"/>
      <xs:attribute name="keyref" type="xs:string"/>
      <xs:attribute name="keys" type="xs:string"/>
      <xs:attribute name="scope">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="external"/>
               <xs:enumeration value="local"/>
               <xs:enumeration value="peer"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="processing-role">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="normal"/>
               <xs:enumeration value="resource-only"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="format" type="xs:string"/>
      <xs:attribute name="type" type="xs:string"/>
      <xs:attribute name="cascade" type="xs:string"/>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="hasRelated">
      <xs:annotation>
         <xs:documentation>The &lt;hasRelated&gt; element identifies an associative relationship between the container subject and each of the contained subjects.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="hasRelated.class">
               <xs:attribute ref="class" default="- map/topicref subjectScheme/hasRelated "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="hasRelated.class">
      <xs:sequence>
         <xs:group ref="hasRelated.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="hasRelated.attributes"/>
   </xs:complexType>
   <xs:group name="hasRelated.content">
      <xs:sequence>
         <xs:group ref="topicmeta" minOccurs="0"/>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="data.elements.incl"/>
            <xs:group ref="subjectdef"/>
            <xs:group ref="subjectHead"/>
            <xs:group ref="topicref"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="hasRelated.attributes">
      <xs:attribute name="navtitle" type="xs:string"/>
      <xs:attribute name="href" type="xs:string"/>
      <xs:attribute name="keyref" type="xs:string"/>
      <xs:attribute name="keys" type="xs:string"/>
      <xs:attribute name="collection-type">
         <xs:annotation>
            <xs:documentation>Default removed for DITA 1.3.</xs:documentation>
         </xs:annotation>
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="choice"/>
               <xs:enumeration value="family"/>
               <xs:enumeration value="sequence"/>
               <xs:enumeration value="unordered"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="processing-role">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="normal"/>
               <xs:enumeration value="resource-only"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="scope">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="external"/>
               <xs:enumeration value="local"/>
               <xs:enumeration value="peer"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="format" type="xs:string"/>
      <xs:attribute name="type" type="xs:string"/>
      <xs:attribute name="cascade" type="xs:string"/>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="subjectdef">
      <xs:annotation>
         <xs:documentation>The &lt;subjectdef&gt; element defines a subject (also known as a controlled value) within a scheme. To make the subject easy to identify, a &lt;subjectdef&gt; may use a keys attribute to assign a key to the subject. A subject with a key can be identified elsewhere with a keyref. The &lt;subjectdef&gt; may use a navtitle element or attribute to supply a label for the subject. The &lt;subjectdef&gt; may also refer to a topic that captures the consensus definition for the subject. If a &lt;subjectdef&gt; refers to a topic, the &lt;subjectdef&gt; must also have the locktitle attribute set to &amp;#34;yes&amp;#34; in order to use the navtitle instead of the topic title to label the subject.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="subjectdef.class">
               <xs:attribute ref="class" default="- map/topicref subjectScheme/subjectdef "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="subjectdef.class">
      <xs:sequence>
         <xs:group ref="subjectdef.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="subjectdef.attributes"/>
   </xs:complexType>
   <xs:group name="subjectdef.content">
      <xs:sequence>
         <xs:group ref="topicmeta" minOccurs="0"/>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="data.elements.incl"/>
            <xs:group ref="hasInstance"/>
            <xs:group ref="hasKind"/>
            <xs:group ref="hasNarrower"/>
            <xs:group ref="hasPart"/>
            <xs:group ref="hasRelated"/>
            <xs:group ref="subjectdef"/>
            <xs:group ref="subjectHead"/>
            <xs:group ref="topicref"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="subjectdef.attributes">
      <xs:attribute name="navtitle" type="xs:string"/>
      <xs:attribute name="href" type="xs:string"/>
      <xs:attribute name="keyref" type="xs:string"/>
      <xs:attribute name="keys" type="xs:string"/>
      <xs:attribute name="query" type="xs:string"/>
      <xs:attribute name="copy-to" type="xs:string"/>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attribute name="collection-type">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="choice"/>
               <xs:enumeration value="family"/>
               <xs:enumeration value="sequence"/>
               <xs:enumeration value="unordered"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="processing-role">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="normal"/>
               <xs:enumeration value="resource-only"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="type" type="xs:string"/>
      <xs:attribute name="cascade" type="xs:string"/>
      <xs:attribute name="scope">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="external"/>
               <xs:enumeration value="local"/>
               <xs:enumeration value="peer"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="locktitle">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="no"/>
               <xs:enumeration value="yes"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="format" type="xs:string"/>
      <xs:attribute name="linking">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="none"/>
               <xs:enumeration value="normal"/>
               <xs:enumeration value="sourceonly"/>
               <xs:enumeration value="targetonly"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="toc">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="no"/>
               <xs:enumeration value="yes"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="subjectHead">
      <xs:annotation>
         <xs:documentation>The &lt;subjectHead&gt; element provides a heading for a group of subjects. The subjectHead element itself does not reference a file and cannot be referenced as a key, so it does not define any controlled values.
          </xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="subjectHead.class">
               <xs:attribute ref="class" default="- map/topicref subjectScheme/subjectHead "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="subjectHead.class">
      <xs:sequence>
         <xs:group ref="subjectHead.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="subjectHead.attributes"/>
   </xs:complexType>
   <xs:group name="subjectHead.content">
      <xs:sequence>
         <xs:group ref="subjectHeadMeta" minOccurs="0"/>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="data.elements.incl"/>
            <xs:group ref="subjectdef"/>
            <xs:group ref="subjectHead"/>
            <xs:group ref="topicref"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="subjectHead.attributes">
      <xs:attribute name="navtitle" type="xs:string"/>
      <xs:attribute name="collection-type">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="sequence"/>
               <xs:enumeration value="unordered"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="processing-role">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="normal"/>
               <xs:enumeration value="resource-only"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="linking" default="normal">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="normal"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="toc">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="no"/>
               <xs:enumeration value="yes"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="subjectHeadMeta">
      <xs:annotation>
         <xs:documentation>The &lt;subjectHeadMeta&gt; element allows a navigation title and short description to be associated with a subject heading.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="subjectHeadMeta.class">
               <xs:attribute ref="class" default="- map/topicmeta subjectScheme/subjectHeadMeta "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="subjectHeadMeta.class">
      <xs:sequence>
         <xs:group ref="subjectHeadMeta.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="subjectHeadMeta.attributes"/>
   </xs:complexType>
   <xs:group name="subjectHeadMeta.content">
      <xs:sequence>
         <xs:group ref="navtitle" minOccurs="0"/>
         <xs:group ref="shortdesc" minOccurs="0"/>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="subjectHeadMeta.attributes">
      <xs:attribute name="lockmeta">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="no"/>
               <xs:enumeration value="yes"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="enumerationdef">
      <xs:annotation>
         <xs:documentation>The &lt;enumerationdef&gt; element identifies one attribute and one or more categories that contain the controlled values for the enumeration. The type attribute has a default value of keys.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="enumerationdef.class">
               <xs:attribute ref="class" default="- map/topicref subjectScheme/enumerationdef "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="enumerationdef.class">
      <xs:sequence>
         <xs:group ref="enumerationdef.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="enumerationdef.attributes"/>
   </xs:complexType>
   <xs:group name="enumerationdef.content">
      <xs:sequence>
         <xs:group ref="elementdef" minOccurs="0"/>
         <xs:group ref="attributedef"/>
         <xs:group ref="subjectdef" minOccurs="1" maxOccurs="unbounded"/>
         <xs:group ref="defaultSubject" minOccurs="0"/>
         <xs:group ref="data.elements.incl" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="enumerationdef.attributes">
      <xs:attributeGroup ref="id-atts"/>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attribute name="status">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="changed"/>
               <xs:enumeration value="deleted"/>
               <xs:enumeration value="new"/>
               <xs:enumeration value="unchanged"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="base" type="xs:string"/>
      <xs:attributeGroup ref="base-attribute-extensions"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="elementdef">
      <xs:annotation>
         <xs:documentation>The &lt;elementdef&gt; element identifies an element on which an attribute is enumerated. When the &lt;elementdef&gt; is left out of an &lt;enumerationdef&gt; element, the enumeration is bound to the attribute in all elements.
          </xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="elementdef.class">
               <xs:attribute ref="class" default="- topic/data subjectScheme/elementdef "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="elementdef.class">
      <xs:sequence>
         <xs:group ref="elementdef.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="elementdef.attributes"/>
   </xs:complexType>
   <xs:group name="elementdef.content">
      <xs:sequence>
         <xs:group ref="data.elements.incl" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="elementdef.attributes">
      <xs:attributeGroup ref="id-atts"/>
      <xs:attribute name="name" use="required" type="xs:string"/>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attribute name="status">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="changed"/>
               <xs:enumeration value="deleted"/>
               <xs:enumeration value="new"/>
               <xs:enumeration value="unchanged"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="translate" default="no">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="no"/>
               <xs:enumeration value="yes"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="base" type="xs:string"/>
      <xs:attributeGroup ref="base-attribute-extensions"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="attributedef">
      <xs:annotation>
         <xs:documentation>The &lt;attributedef&gt; element defines an attribute as an enumeration by specifying controlled values from a scheme.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="attributedef.class">
               <xs:attribute ref="class" default="- topic/data subjectScheme/attributedef "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="attributedef.class">
      <xs:sequence>
         <xs:group ref="attributedef.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="attributedef.attributes"/>
   </xs:complexType>
   <xs:group name="attributedef.content">
      <xs:sequence>
         <xs:group ref="data.elements.incl" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="attributedef.attributes">
      <xs:attributeGroup ref="id-atts"/>
      <xs:attribute name="name" use="required" type="xs:string"/>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attribute name="status">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="changed"/>
               <xs:enumeration value="deleted"/>
               <xs:enumeration value="new"/>
               <xs:enumeration value="unchanged"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="translate" default="no">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="no"/>
               <xs:enumeration value="yes"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="base" type="xs:string"/>
      <xs:attributeGroup ref="base-attribute-extensions"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="defaultSubject">
      <xs:annotation>
         <xs:documentation>The &lt;defaultSubject&gt; element is used within an attribute enumeration to set the default value for that attribute in cases where no value is specified on the attribute. The default subject must be one of the controlled values within the categories specified for the attribute.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="defaultSubject.class">
               <xs:attribute ref="class" default="- map/topicref subjectScheme/defaultSubject "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="defaultSubject.class">
      <xs:sequence>
         <xs:group ref="defaultSubject.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="defaultSubject.attributes"/>
   </xs:complexType>
   <xs:group name="defaultSubject.content">
      <xs:sequence>
         <xs:group ref="data.elements.incl" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="defaultSubject.attributes">
      <xs:attribute name="navtitle" type="xs:string"/>
      <xs:attribute name="href" type="xs:string"/>
      <xs:attribute name="keyref" type="xs:string"/>
      <xs:attribute name="keys" type="xs:string"/>
      <xs:attribute name="query" type="xs:string"/>
      <xs:attribute name="copy-to" type="xs:string"/>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attribute name="type" type="xs:string"/>
      <xs:attribute name="cascade" type="xs:string"/>
      <xs:attribute name="scope">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="external"/>
               <xs:enumeration value="local"/>
               <xs:enumeration value="peer"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="processing-role">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="normal"/>
               <xs:enumeration value="resource-only"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="locktitle">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="no"/>
               <xs:enumeration value="yes"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="format" type="xs:string"/>
      <xs:attribute name="linking">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="none"/>
               <xs:enumeration value="normal"/>
               <xs:enumeration value="sourceonly"/>
               <xs:enumeration value="targetonly"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="toc">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="no"/>
               <xs:enumeration value="yes"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="relatedSubjects">
      <xs:annotation>
         <xs:documentation>The &lt;relatedSubjects&gt; element establishes associative relationships between each child subject and every other child subject (unless the association is restricted by the linking attribute of the subjects).
      To define roles within a relationship, you can specialize the relatedSubjects container and its contained subjectdef elements, possibly setting the linking attribute to
        targetonly or sourceonly. For instance, a dependency relationship could contain depended-on and dependent subjects. </xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="relatedSubjects.class">
               <xs:attribute ref="class" default="- map/topicref subjectScheme/relatedSubjects "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="relatedSubjects.class">
      <xs:sequence>
         <xs:group ref="relatedSubjects.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="relatedSubjects.attributes"/>
   </xs:complexType>
   <xs:group name="relatedSubjects.content">
      <xs:sequence>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="data.elements.incl"/>
            <xs:group ref="subjectdef"/>
            <xs:group ref="topicref"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="relatedSubjects.attributes">
      <xs:attribute name="navtitle" type="xs:string"/>
      <xs:attribute name="href" type="xs:string"/>
      <xs:attribute name="keyref" type="xs:string"/>
      <xs:attribute name="keys" type="xs:string"/>
      <xs:attribute name="query" type="xs:string"/>
      <xs:attribute name="collection-type" default="family">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="choice"/>
               <xs:enumeration value="family"/>
               <xs:enumeration value="sequence"/>
               <xs:enumeration value="unordered"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="processing-role">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="normal"/>
               <xs:enumeration value="resource-only"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="type" type="xs:string"/>
      <xs:attribute name="cascade" type="xs:string"/>
      <xs:attribute name="scope">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="external"/>
               <xs:enumeration value="local"/>
               <xs:enumeration value="peer"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="format" type="xs:string"/>
      <xs:attribute name="linking" default="normal">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="none"/>
               <xs:enumeration value="normal"/>
               <xs:enumeration value="sourceonly"/>
               <xs:enumeration value="targetonly"/>
               <xs:enumeration value="-dita-use-conref-target"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:attribute>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="subjectRelTable">
      <xs:annotation>
         <xs:documentation>The &lt;subjectRelTable&gt; element is a specialized relationship table which establishes relationships between the subjects in different columns of the same row.      
            
            Where there are many instances of a subject relationship in which different subjects have defined roles within the relationship, you can use or specialize the subjectRelTable.
        Note that each row matrixes relationships across columns such that a subject receives relationships to every subject in other columns within the same row. </xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="subjectRelTable.class">
               <xs:attribute ref="class" default="- map/reltable subjectScheme/subjectRelTable "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="subjectRelTable.class">
      <xs:sequence>
         <xs:group ref="subjectRelTable.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="subjectRelTable.attributes"/>
   </xs:complexType>
   <xs:group name="subjectRelTable.content">
      <xs:sequence>
         <xs:group ref="title" minOccurs="0"/>
         <xs:group ref="topicmeta" minOccurs="0"/>
         <xs:group ref="subjectRelHeader" minOccurs="0"/>
         <xs:group ref="subjectRel" minOccurs="1" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="subjectRelTable.attributes">
      <xs:attributeGroup ref="topicref-atts-no-toc"/>
      <xs:attribute name="outputclass" type="xs:string"/>
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="subjectRelHeader">
      <xs:annotation>
         <xs:documentation>The &lt;subjectRelHeader&gt; element specifies the roles played by subjects in associations.
            The role definition can be an informal navtitle or a formal reference
          </xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="subjectRelHeader.class">
               <xs:attribute ref="class" default="- map/relrow subjectScheme/subjectRelHeader "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="subjectRelHeader.class">
      <xs:sequence>
         <xs:group ref="subjectRelHeader.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="subjectRelHeader.attributes"/>
   </xs:complexType>
   <xs:group name="subjectRelHeader.content">
      <xs:sequence>
         <xs:group ref="subjectRole" minOccurs="1" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="subjectRelHeader.attributes">
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="subjectRel">
      <xs:annotation>
         <xs:documentation>The &lt;subjectRel&gt; element contains a set of subjects that are related in some manner. Each group of subjects is contained in a &lt;subjectRole&gt; element; the associations between different columns in the same row are evaluated in the same way as those in a &lt;relrow&gt; (from which &lt;subjectRel&gt; is specialized) but define relationships between the subjects instead of links between topic documents.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="subjectRel.class">
               <xs:attribute ref="class" default="- map/relrow subjectScheme/subjectRel "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="subjectRel.class">
      <xs:sequence>
         <xs:group ref="subjectRel.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="subjectRel.attributes"/>
   </xs:complexType>
   <xs:group name="subjectRel.content">
      <xs:sequence>
         <xs:group ref="subjectRole" minOccurs="1" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="subjectRel.attributes">
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   <xs:element name="subjectRole">
      <xs:annotation>
         <xs:documentation>The &lt;subjectRole&gt; element contains a set of subjects that are related to other subjects in the same row of the current &lt;subjectRelTable&gt;. By default, no relationship is defined between multiple subjects in the same &lt;subjectRole&gt; element.</xs:documentation>
      </xs:annotation>
      <xs:complexType>
         <xs:complexContent>
            <xs:extension base="subjectRole.class">
               <xs:attribute ref="class" default="- map/relcell subjectScheme/subjectRole "/>
            </xs:extension>
         </xs:complexContent>
      </xs:complexType>
   </xs:element>
   <xs:complexType name="subjectRole.class">
      <xs:sequence>
         <xs:group ref="subjectRole.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="subjectRole.attributes"/>
   </xs:complexType>
   <xs:group name="subjectRole.content">
      <xs:sequence>
         <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:group ref="data.elements.incl"/>
            <xs:group ref="subjectdef"/>
            <xs:group ref="topicref"/>
         </xs:choice>
      </xs:sequence>
   </xs:group>
   <xs:attributeGroup name="subjectRole.attributes">
      <xs:attributeGroup ref="topicref-atts"/>
      <xs:attributeGroup ref="univ-atts"/>
      <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
</xs:schema>
