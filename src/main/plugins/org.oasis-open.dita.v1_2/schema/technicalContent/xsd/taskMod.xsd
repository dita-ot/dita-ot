<?xml version="1.0" encoding="UTF-8"?>
<!-- ============================================================= -->
<!--                    HEADER                                     -->
<!-- ============================================================= -->
<!--  VERSION:   1.2                                             -->
<!--  DATE:      July 2007                                     -->
<!--  DATE:      November 2009                                     -->
<!--                                                               -->
<!-- ============================================================= -->

<!-- ============================================================= -->
<!-- SYSTEM:     Darwin Information Typing Architecture (DITA)     -->
<!--                                                               -->
<!-- PURPOSE:    W3C XML Schema to describe DITA Tasks             -->
<!--                                                               -->
<!-- ORIGINAL CREATION DATE:                                       -->
<!--             March 2001                                        -->
<!--                                                               -->
<!--             (C) Copyright OASIS-Open.org 2005, 2009                -->
<!--             (C) Copyright IBM Corporation 2001, 2004.         -->
<!--             All Rights Reserved.                              -->
<!-- ============================================================= -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/">
  <!-- ==================== Import Section ======================= -->
   <xs:import namespace="http://dita.oasis-open.org/architecture/2005/" schemaLocation="urn:oasis:names:tc:dita:xsd:ditaarch.xsd:1.2"/>

  <xs:annotation>
    <xs:appinfo>
      <dita:domainsModule xmlns:dita="http://dita.oasis-open.org/architecture/2005/">(topic task)</dita:domainsModule>
    </xs:appinfo>
    <xs:documentation> 
    
    </xs:documentation>
  </xs:annotation>

  <!-- Base type: univ-atts -->
  <xs:attributeGroup name="univ-atts-no-importance-task">
    <xs:attributeGroup ref="id-atts"/>
    <xs:attribute name="base" type="xs:string" />
    <xs:attributeGroup ref="base-attribute-extensions"/>
    <xs:attributeGroup ref="filter-atts"/>
    <xs:attribute name="rev" type="xs:string"/>
    <xs:attribute name="status" type="status-atts.class"/>
    <xs:attributeGroup ref="localization-atts" />
  </xs:attributeGroup>
   
  <!-- Base type: importance-atts.class -->
  <xs:simpleType name="importance-att-nodefault-task.class">
    <xs:restriction base="importance-atts.class">
      <xs:enumeration value="optional"/>
      <xs:enumeration value="required"/>
      <xs:enumeration value="-dita-use-conref-target"/>
    </xs:restriction>
  </xs:simpleType>
   
  <!-- Element declarations for task.mod -->
  <xs:element name="task">
    <xs:annotation>
      <xs:documentation>
        The &lt;<keyword>task</keyword>> element is the top-level element
        for a task topic. Tasks are the main building blocks for task-oriented user
        assistance. They generally provide step-by-step instructions that will enable
        a user to perform a task. A task answers the question of "how to?" by telling
        the user precisely what to do and the order in which to do it. Tasks have
        the same high-level structure as other topics, with a title, short description
        and body.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="task.class">
          <xs:attribute ref="class" default="- topic/topic task/task "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="taskbody">
    <xs:annotation>
      <xs:documentation>
        The &lt;<keyword>taskbody</keyword>> element is the main body-level
        element inside a task topic. A task body has a very specific structure, with
        the following elements in this order: &lt;<keyword>prereq</keyword>>, &lt;<keyword>context</keyword>>,
        &lt;<keyword>steps</keyword>>, &lt;<keyword>result</keyword>, &lt;<keyword>example</keyword>>
        and &lt;<keyword>postreq</keyword>>. Each of the body sections are optional.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="taskbody.class">
          <xs:attribute ref="class" default="- topic/body  task/taskbody "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="prereq">
    <xs:annotation>
      <xs:documentation>
        The pre-requisite (&lt;<keyword>prereq</keyword>>) section of a
        task should document things the user needs to know or do before starting the
        current task. Prerequisite links will be placed in a list after the related-links
        section; on output the &lt;<keyword>prereq</keyword>> links from the related-links
        section are added to the &lt;<keyword>prereq</keyword>> section.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="prereq.class">
          <xs:attribute ref="class" default="- topic/section  task/prereq "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="context">
    <xs:annotation>
      <xs:documentation>
        The &lt;<keyword>context</keyword>> section of a task provides
        background information for the task. This information helps the user understand
        what the purpose of the task is and what they will gain by completing the
        task. This section should be brief and does not replace or recreate a concept
        topic on the same subject, although the context section may include some conceptual
        information
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="context.class">
          <xs:attribute ref="class" default="- topic/section  task/context "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="result">
    <xs:annotation>
      <xs:documentation>
        The &lt;<keyword>result</keyword>> element describes the expected
        outcome for the task as a whole. 
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="result.class">
          <xs:attribute ref="class" default="- topic/section     task/result "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="postreq">
    <xs:annotation>
      <xs:documentation>
        The &lt;<keyword>postreq</keyword>> element describes steps or
        tasks that the user should do after the successful completion of the current
        task. It is often supported by links to the next task or tasks in the &lt;<keyword>related-links</keyword>>
        section.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="postreq.class">
          <xs:attribute ref="class" default="- topic/section task/postreq "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="choice">
    <xs:annotation>
      <xs:documentation>
        Each &lt;<keyword>choice</keyword>> element describes one way that
        the user could accomplish the current step.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="choice.class">
          <xs:attribute ref="class" default="- topic/li     task/choice "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="step">
    <xs:annotation>
      <xs:documentation>
        The &lt;<keyword>step</keyword>> element represents an action that
        a user must follow to accomplish a task. Each step in a task must contain
        a command &lt;<keyword>cmd</keyword>> element which describes the particular
        action the user must do to accomplish the overall task. The step element can
        also contain information &lt;<keyword>info</keyword>>, substeps &lt;<keyword>substeps</keyword>>,
        tutorial information &lt;<keyword>tutorialinfo</keyword>>, a step example
        &lt;<keyword>stepxmp</keyword>>, choices &lt;<keyword>choices</keyword>> or
        a stepresult &lt;<keyword>stepresult</keyword>>, although these are optional.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="step.class">
          <xs:attribute ref="class" default="- topic/li     task/step "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="stepsection">
    <xs:annotation>
      <xs:documentation>
        
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="stepsection.class">
          <xs:attribute ref="class" default="- topic/li     task/stepsection "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="substep">
    <xs:annotation>
      <xs:documentation>
        A &lt;<keyword>substep</keyword>> element has the same structure
        as a &lt;<keyword>step</keyword>>, except that it does not allow lists of
        choices or substeps within it, in order to prevent unlimited nesting of steps.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="substep.class">
          <xs:attribute ref="class" default="- topic/li     task/substep "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
   <xs:element name="steps-unordered">
     <xs:annotation>
       <xs:documentation>
         Like the &lt;<keyword>steps</keyword>> element, the &lt;<keyword>steps-unordered</keyword>>
         section of a task provides the main content of the task topic, but particularly
         for cases in which the order of steps may vary from one situation to another.
         For example, fields of a form can be filled in without particular regard
         to order as long as the required ones are filled in before submitting the
         form. One or more steps is required inside the &lt;<keyword>steps-unordered</keyword>>
         section.
       </xs:documentation>
     </xs:annotation>
     <xs:complexType>
       <xs:complexContent>
         <xs:extension base="steps-unordered.class">
           <xs:attribute ref="class" default="- topic/ul     task/steps-unordered "/>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
  </xs:element>
  
   <xs:element name="choices">
     <xs:annotation>
       <xs:documentation>
         The &lt;<keyword>choices</keyword>> element contains a list of
         &lt;<keyword>choice</keyword>> elements. It is used when the user will need
         to choose one of several actions while performing the steps of a task.
       </xs:documentation>
     </xs:annotation>
     <xs:complexType>
       <xs:complexContent>
         <xs:extension base="choices.class">
           <xs:attribute ref="class" default="- topic/ul     task/choices "/>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
   </xs:element>
   
  <xs:element name="steps">
    <xs:annotation>
      <xs:documentation>
        The &lt;<keyword>steps</keyword>> section of a task provides the
        main content of the task topic. The task is described as a series of steps
        that the user must follow to accomplish the task. One or more &lt;<keyword>steps</keyword>>
        elements is required inside the &lt;<keyword>steps</keyword>> section.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="steps.class">
          <xs:attribute ref="class" default="- topic/ol  task/steps "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="substeps">
    <xs:annotation>
      <xs:documentation>
        The &lt;<keyword>substeps</keyword>> element allows you to break
        a step down into a series of separate actions, and should be used only if
        necessary. Try to describe the steps of a task in a single level of steps.
        If you need to use more than one level of substep nesting, you should probably
        rewrite the task to simplify it.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="substeps.class">
          <xs:attribute ref="class" default="- topic/ol     task/substeps "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="cmd">
    <xs:annotation>
      <xs:documentation>
        The command (&lt;<keyword>cmd</keyword>>) element is required as
        the first element inside a &lt;<keyword>step</keyword>>. It provides the active
        voice instruction to the user for completing the step, and should not be more
        than one sentence. If the step needs additional explanation, this can follow
        the &lt;<keyword>cmd</keyword>> element inside an <xref href="info.xml">info</xref> element.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="cmd.class">
          <xs:attribute ref="class" default="- topic/ph     task/cmd "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="info">
    <xs:annotation>
      <xs:documentation>
        The information element (&lt;<keyword>info</keyword>>) occurs inside
        a &lt;<keyword>step</keyword>> element to provide additional information about
        the step.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="info.class">
          <xs:attribute ref="class" default="- topic/itemgroup     task/info "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="tutorialinfo">
    <xs:annotation>
      <xs:documentation>
        The tutorial info (&lt;<keyword>tutorialinfo</keyword>>) element
        contains information that is included in a step when a task is part of a tutorial.
        The &lt;<keyword>tutorialinfo</keyword>> element allows you to turn a task
        into a learning exercise by including explanatory content about methods for
        completing the current step. This information is currently included in all
        output processing results, not just tutorials. It is not for use in tasks
        that are being used outside of tutorials.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="tutorialinfo.class">
          <xs:attribute ref="class" default="- topic/itemgroup task/tutorialinfo "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="stepxmp">
    <xs:annotation>
      <xs:documentation>
        The step example (&lt;<keyword>stepxmp</keyword>>) element is used
        to illustrate a step of a task. The example can be a couple of words, or an
        entire paragraph.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="stepxmp.class">
          <xs:attribute ref="class" default="- topic/itemgroup     task/stepxmp "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="stepresult">
    <xs:annotation>
      <xs:documentation>
        The &lt;<keyword>stepresult</keyword>> element provides information
        on the expected outcome of a step. If a user interface is being documented,
        the outcome could describe a dialog box opening, or the appearance of a progress
        indicator. Step results are useful to assure a user that they are on track,
        but should not be used for every step, as this quickly becomes tedious.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="stepresult.class">
          <xs:attribute ref="class" default="- topic/itemgroup task/stepresult "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="choicetable">
    <xs:annotation>
      <xs:documentation>
        The &lt;<keyword>choicetable</keyword>> element contains a series
        of optional choices available within a step of a task.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="choicetable.class">
          <xs:attribute ref="class" default="- topic/simpletable task/choicetable "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
   <xs:element name="chhead">
     <xs:annotation>
       <xs:documentation>
         The &lt;<keyword>chhead</keyword>> element is a container inside
         the &lt;<keyword>choicetable</keyword>> element that provides specific heading
         text to override the default <b>Options</b> and <b>Description</b> headings.
         The &lt;<keyword>chhead</keyword>> element contains both a <xref  href="choptionhd.xml">choptionhd</xref>
          and <xref href="chdeschd.xml">chdeschd</xref>  element as a pair.
       </xs:documentation>
     </xs:annotation>
     <xs:complexType>
       <xs:complexContent>
         <xs:extension base="chhead.class">
           <xs:attribute ref="class" default="- topic/sthead task/chhead "/>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
  </xs:element>
  
   <xs:element name="chrow">
     <xs:annotation>
       <xs:documentation>
         The &lt;<keyword>chrow</keyword>> element is a container inside
         the &lt;<keyword>choicetable</keyword>> element. The &lt;<keyword>chrow</keyword>>
         element contains both a &lt;<keyword>choption</keyword>> and &lt;<keyword>chdesc</keyword>>
         element as a pair.
       </xs:documentation>
     </xs:annotation>
     <xs:complexType>
       <xs:complexContent>
         <xs:extension base="chrow.class">
           <xs:attribute ref="class" default="- topic/strow task/chrow "/>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
  </xs:element>
  
   <xs:element name="choptionhd">
     <xs:annotation>
       <xs:documentation>
         The &lt;<keyword>choptionhd</keyword>> element provides a specific
         label for the list of options that a user chooses from to accomplish a step.
         The default label for options is <b>Option</b>.
       </xs:documentation>
     </xs:annotation>
     <xs:complexType>
       <xs:complexContent>
         <xs:extension base="choptionhd.class">
           <xs:attribute ref="class" default="- topic/stentry task/choptionhd "/>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
   </xs:element>
   
  <xs:element name="chdeschd">
    <xs:annotation>
      <xs:documentation>
        The &lt;<keyword>chdeschd</keyword>> option provides a specific
        label for the list of descriptions of options that a user must choose to accomplish
        a step of a task. The default label overridden by &lt;<keyword>chdeschd</keyword>>
        is <b>Description</b>.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="chdeschd.class">
          <xs:attribute ref="class" default="- topic/stentry task/chdeschd "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
   
  <xs:element name="choption">
    <xs:annotation>
      <xs:documentation>
        The &lt;<keyword>choption</keyword>> element describes an option
        that a user could choose to accomplish a step of a task. In a user interface,
        for example, this might be the name of radio button.
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="choption.class">
          <xs:attribute ref="class" default="- topic/stentry task/choption "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  
   <xs:element name="chdesc">
     <xs:annotation>
       <xs:documentation>
         The &lt;<keyword>chdesc</keyword>> element is a description of
         an option that a user chooses while performing a step to accomplish a task.
         It explains why the user would choose that option, and might explain the result
         of the choice when it is not immediately obvious.
       </xs:documentation>
     </xs:annotation>
     <xs:complexType>
       <xs:complexContent>
         <xs:extension base="chdesc.class">
           <xs:attribute ref="class" default="- topic/stentry task/chdesc "/>
         </xs:extension>
       </xs:complexContent>
     </xs:complexType>
   </xs:element>
   
   <xs:element name="steps-informal">
     <xs:complexType>
      <xs:complexContent>
        <xs:extension base="steps-informal.class">
          <xs:attribute ref="class" default="- topic/section task/steps-informal "/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="steps-informal.class" mixed="true">
    <xs:sequence>
      <xs:group ref="steps-informal.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="steps-informal.attributes"/>
  </xs:complexType>
  
  <xs:group name="steps-informal.content">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="section.notitle.cnt" minOccurs="0"/>
    </xs:choice>  
    </xs:sequence>
  </xs:group>

<xs:attributeGroup name="steps-informal.attributes">
    <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
  </xs:attributeGroup>

  <!-- Element declarations for task.mod -->
  <xs:group name="task-info-types">
    <xs:choice>
      <xs:group ref="task"/>
      <xs:group ref="info-types"/>
    </xs:choice>
  </xs:group>

   <!-- Base type: topic.class -->
  <xs:complexType name="task.class">
   <xs:sequence>
     <xs:group ref="task.content"/>
   </xs:sequence>
    <xs:attributeGroup ref="task.attributes"/>
  </xs:complexType>
   
   <xs:group name="task.content">
    <xs:sequence>
      <xs:sequence>
        <xs:group ref="title"/>
        <xs:group ref="titlealts" minOccurs="0"/>
        <xs:choice minOccurs="0">
          <xs:group ref="shortdesc" minOccurs="0"/>
          <xs:group ref="abstract" minOccurs="0"/>
        </xs:choice>
        <xs:group ref="prolog" minOccurs="0"/>
        <xs:group ref="taskbody" minOccurs="0"/>
        <xs:group ref="related-links" minOccurs="0"/>
        <xs:group ref="task-info-types" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:sequence>
   </xs:group>
   
   <xs:attributeGroup name="task.attributes">
    <xs:attribute name="id" type="xs:ID" use="required"/>
    <xs:attributeGroup ref="conref-atts" />
    <xs:attributeGroup ref="select-atts"/>
    <xs:attribute ref="ditaarch:DITAArchVersion"/>
    <xs:attributeGroup ref="domains-att"/>
    <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="localization-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
<!--
<!ENTITY % taskbody.content
"(((%prereq;) | 
(%context;) |
(%section;))*,
((%steps; | 
%steps-unordered; |
%steps-informal;))?, 
(%result;)?, 
(%example;)*, 
(%postreq;)*)"          
>  -->

  <!-- Base type: body.class -->
  <xs:complexType name="taskbody.class">
    <xs:choice>
      <xs:group ref="taskbody.content"/>
    </xs:choice>
    <xs:attributeGroup ref="taskbody.attributes"/>
  </xs:complexType>
   
   <xs:group name="taskbody.content">
    <xs:sequence>
      <xs:group ref="taskPreStep"/>
      <xs:group ref="taskStep"/>
      <xs:group ref="taskPostStep"/>
    </xs:sequence>
  </xs:group>

  <xs:group name="taskPreStep">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:group ref="context" minOccurs="0"/>
        <xs:group ref="prereq"  minOccurs="0"/>
        <xs:group ref="section" minOccurs="0"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>

  <xs:group name="taskPostStep">
    <xs:sequence>
      <xs:group ref="result"  minOccurs="0"/>
      <xs:group ref="example"  minOccurs="0" maxOccurs="unbounded"/>
      <xs:group ref="postreq"  minOccurs="0" maxOccurs="unbounded"/>  
    </xs:sequence>
  </xs:group>
  
  <xs:group name="taskStep">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="1">
        <xs:group ref="steps" />
        <xs:group ref="steps-unordered" />
        <xs:group ref="steps-informal" />
      </xs:choice>
    </xs:sequence>
  </xs:group>
   
   <xs:attributeGroup name="taskbody.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attribute name="base" type="xs:string" />
    <xs:attributeGroup ref="base-attribute-extensions"/>
    <xs:attributeGroup ref="id-atts"/>
    <xs:attributeGroup ref="localization-atts" />
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

   <!-- Base type: section.class -->
  <xs:complexType name="prereq.class" mixed="true">
    <xs:sequence>
      <xs:group ref="prereq.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="prereq.attributes"/>
  </xs:complexType>
   
   <xs:group name="prereq.content">
     <xs:sequence>
       <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="section.notitle.cnt" minOccurs="0"/>
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
    <xs:attributeGroup name="prereq.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

  <!-- Base type: section.class -->
  <xs:complexType name="context.class" mixed="true">
    <xs:sequence>
      <xs:group ref="context.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="context.attributes"/>
  </xs:complexType>
   
   <xs:group name="context.content">
     <xs:sequence>
       <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="section.notitle.cnt" minOccurs="0"/>
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
    <xs:attributeGroup name="context.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

  <!-- Base type: ol.class -->
  <xs:complexType name="steps.class">
    <xs:sequence>
      <xs:group ref="steps.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="steps.attributes"/>
  </xs:complexType>
   
   <xs:group name="steps.content">
     <xs:sequence>
       <xs:sequence maxOccurs="unbounded">
         <xs:group ref="stepsection" minOccurs="0"/>
         <xs:group ref="step" />
       </xs:sequence>
     </xs:sequence>
   </xs:group>
   
    <xs:attributeGroup name="steps.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

  <!-- Base type: ul.class -->
  <xs:complexType name="steps-unordered.class">
    <xs:sequence>
      <xs:group ref="steps-unordered.content"/>
    </xs:sequence>
   <xs:attributeGroup ref="steps-unordered.attributes"/>
  </xs:complexType>
   
   <xs:group name="steps-unordered.content">
     <xs:sequence>
       <xs:sequence maxOccurs="unbounded">
         <xs:group ref="stepsection" minOccurs="0"/>
         <xs:group ref="step" />
       </xs:sequence>
     </xs:sequence>
   </xs:group>
   
    <xs:attributeGroup name="steps-unordered.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

  <!-- Base type: li.class -->
  <xs:complexType name="step.class">
      <xs:sequence>
        <xs:group ref="step.content"/>
      </xs:sequence>
      <xs:attributeGroup ref="step.attributes"/>
  </xs:complexType>
   
   <xs:group name="step.content">
    <xs:sequence>
      <xs:sequence>
        <xs:group ref="note" minOccurs="0" maxOccurs="unbounded"/>
        <xs:group ref="cmd"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:group ref="choices"/>
          <xs:group ref="choicetable"/>
          <xs:group ref="info"/>
          <xs:group ref="itemgroup"/>
          <xs:group ref="stepxmp"/>
          <xs:group ref="substeps"/>
          <xs:group ref="tutorialinfo"/>
        </xs:choice>
        <xs:group ref="stepresult" minOccurs="0"/>
      </xs:sequence>
    </xs:sequence>
   </xs:group>
   
    <xs:attributeGroup name="step.attributes">
    <xs:attribute name="importance" type="importance-att-nodefault-task.class"/>
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts-no-importance-task"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

  <!-- Base type: ph.class -->
  <xs:complexType name="cmd.class" mixed="true">
    <xs:sequence>
      <xs:group ref="cmd.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="cmd.attributes"/>
  </xs:complexType>
   
   <xs:group name="cmd.content">
     <xs:sequence>
       <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="ph.cnt" minOccurs="0"/>
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
    <xs:attributeGroup name="cmd.attributes">
      <xs:attribute name="keyref" type="xs:string"/>
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>


  <!-- Base type: itemgroup.class -->
  <xs:complexType name="info.class" mixed="true">
    <xs:sequence>
      <xs:group ref="info.content"/>
    </xs:sequence>
   <xs:attributeGroup ref="info.attributes"/>
  </xs:complexType>
   
   <xs:group name="info.content">
     <xs:sequence>
       <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="itemgroup.cnt" minOccurs="0"/>
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
    <xs:attributeGroup name="info.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

  <!-- Base type: ol.class -->
  <xs:complexType name="substeps.class">
    <xs:sequence>
      <xs:group ref="substeps.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="choices.attributes"/>
  </xs:complexType>
   
   <xs:group name="substeps.content">
     <xs:sequence>
       <xs:choice maxOccurs="unbounded">
      <xs:group ref="substep" />
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
    <xs:attributeGroup name="substeps.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

  <!-- Base type: li.class -->
  <xs:complexType name="substep.class">
    <xs:sequence>
      <xs:group ref="substep.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="substep.attributes"/>
  </xs:complexType>
   
   <xs:group name="substep.content">
    <xs:sequence>
      <xs:sequence>
        <xs:group ref="note" minOccurs="0" maxOccurs="unbounded"/>
        <xs:group ref="cmd"/>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:group ref="info"/>
          <xs:group ref="itemgroup"/>
          <xs:group ref="tutorialinfo"/>
          <xs:group ref="stepxmp"/>
        </xs:choice>
        <xs:group ref="stepresult" minOccurs="0"/>
      </xs:sequence>
    </xs:sequence>
   </xs:group>
   
   <xs:attributeGroup name="substep.attributes">
      <xs:attribute name="importance" type="importance-att-nodefault-task.class"/>
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts-no-importance-task"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

  <!-- Base type: itemgroup.class -->
  <xs:complexType name="tutorialinfo.class" mixed="true">
    <xs:sequence>
      <xs:group ref="tutorialinfo.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="tutorialinfo.attributes"/>
  </xs:complexType>
   
   <xs:group name="tutorialinfo.content">
     <xs:sequence>
       <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="itemgroup.cnt" minOccurs="0"/>
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
    <xs:attributeGroup name="tutorialinfo.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

  <!-- Base type: itemgroup.class -->
  <xs:complexType name="stepxmp.class" mixed="true">
     <xs:sequence>
      <xs:group ref="stepxmp.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="stepxmp.attributes"/>
  </xs:complexType>
   
   <xs:group name="stepxmp.content">
     <xs:sequence>
       <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="itemgroup.cnt" minOccurs="0"/>
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
    <xs:attributeGroup name="stepxmp.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

  <!-- Base type: ul.class -->
  <xs:complexType name="choices.class">
    <xs:sequence>
      <xs:group ref="choices.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="choices.attributes"/>
  </xs:complexType>
   
   <xs:group name="choices.content">
     <xs:sequence>
       <xs:choice maxOccurs="unbounded">
      <xs:group ref="choice" />
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
    <xs:attributeGroup name="choices.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

  <xs:complexType name="choice.class" mixed="true">
    <xs:sequence>
      <xs:group ref="choice.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="choice.attributes"/>
  </xs:complexType>
   
   <xs:group name="choice.content">
     <xs:sequence>
       <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="listitem.cnt" minOccurs="0"/>
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
    <xs:attributeGroup name="choice.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
    </xs:attributeGroup>
   
   <xs:complexType name="stepsection.class" mixed="true">
    <xs:sequence>
      <xs:group ref="stepsection.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="stepsection.attributes"/>
  </xs:complexType>
   
   <xs:group name="stepsection.content">
     <xs:sequence>
       <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="listitem.cnt" minOccurs="0"/>
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
    <xs:attributeGroup name="stepsection.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>


  <!-- Base type: itemgroup.class -->
  <xs:complexType name="stepresult.class" mixed="true">
   <xs:sequence>
      <xs:group ref="stepresult.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="stepresult.attributes"/>
  </xs:complexType>
   
   <xs:group name="stepresult.content">
     <xs:sequence>
       <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="itemgroup.cnt" minOccurs="0"/>
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
    <xs:attributeGroup name="stepresult.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

   <!-- Base type: section.class -->
  <xs:complexType name="result.class" mixed="true">
    <xs:sequence>
      <xs:group ref="result.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="result.attributes"/>
  </xs:complexType>
   
   <xs:group name="result.content">
     <xs:sequence>
       <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="section.notitle.cnt" minOccurs="0"/>
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
   <xs:attributeGroup name="result.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

   <!-- Base type: section.class -->
  <xs:complexType name="postreq.class" mixed="true">
    <xs:sequence>
      <xs:group ref="postreq.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="postreq.attributes"/>
  </xs:complexType>
   
   <xs:group name="postreq.content">
     <xs:sequence>
       <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="section.notitle.cnt" minOccurs="0"/>
    </xs:choice>
     </xs:sequence>
   </xs:group>
    
    <xs:attributeGroup name="postreq.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
   

   <!-- Base type: simpletable.class -->
  <xs:complexType name="choicetable.class">
    <xs:sequence>
      <xs:group ref="choicetable.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="choicetable.attributes"/>
  </xs:complexType>
    
    <xs:group name="choicetable.content">
    <xs:sequence>
      <xs:sequence>
        <xs:group ref="chhead" minOccurs="0"/>
        <xs:group ref="chrow" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:sequence>
    </xs:group>

    <xs:attributeGroup name="choicetable.attributes">
      <xs:attribute name="relcolwidth" type="xs:string"/>
    <xs:attribute name="keycol" type="xs:NMTOKEN" default="1"/>
    <xs:attribute name="refcols" type="xs:NMTOKENS"/>
    <xs:attributeGroup ref="display-atts"/>
    <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attribute name="spectitle" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
    </xs:attributeGroup>

   <!-- Base type: sthead.class -->
  <xs:complexType name="chhead.class">
    <xs:sequence>
      <xs:group ref="chhead.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="chhead.attributes"/>
  </xs:complexType>
   
    <xs:group name="chhead.content">
    <xs:sequence>
      <xs:sequence>
        <xs:group ref="choptionhd"/>
        <xs:group ref="chdeschd"/>
      </xs:sequence>
    </xs:sequence>
   </xs:group>

   <xs:attributeGroup name="chhead.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

   <xs:complexType name="choptionhd.class" mixed="true">
    <xs:sequence>
      <xs:group ref="choptionhd.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="choptionhd.attributes"/>
   </xs:complexType>
   
   <xs:group name="choptionhd.content">
     <xs:sequence>
       <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="tblcell.cnt" minOccurs="0"/>
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
   <xs:attributeGroup name="choptionhd.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attribute name="specentry" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>


<xs:complexType name="chdeschd.class" mixed="true">
  <xs:sequence>
    <xs:group ref="chdeschd.content"/>
  </xs:sequence>
  <xs:attributeGroup ref="chdeschd.attributes"/>
</xs:complexType>

<xs:group name="chdeschd.content">
  <xs:sequence>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="tblcell.cnt" minOccurs="0"/>
    </xs:choice>
  </xs:sequence>
</xs:group>

<xs:attributeGroup name="chdeschd.attributes">
  <xs:attribute name="outputclass" type="xs:string"/>
  <xs:attribute name="specentry" type="xs:string"/>
  <xs:attributeGroup ref="univ-atts"/>
  <xs:attributeGroup ref="global-atts"/>
</xs:attributeGroup>


   <xs:complexType name="chrow.class">
    <xs:sequence>
      <xs:group ref="chrow.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="chrow.attributes"/>
   </xs:complexType>
   
   <xs:group name="chrow.content">
    <xs:sequence>
      <xs:sequence>
        <xs:group ref="choption"/>
        <xs:group ref="chdesc"/>
      </xs:sequence>
    </xs:sequence>
   </xs:group>

   <xs:attributeGroup name="chrow.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>
  

   <xs:complexType name="choption.class" mixed="true">
    <xs:sequence>
      <xs:group ref="choption.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="choption.attributes"/>
   </xs:complexType>
   
   <xs:group name="choption.content">
     <xs:sequence>
       <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="tblcell.cnt" minOccurs="0"/>
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
   <xs:attributeGroup name="choption.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attribute name="specentry" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>


   <xs:complexType name="chdesc.class" mixed="true">
    <xs:sequence>
      <xs:group ref="chdesc.content"/>
    </xs:sequence>
    <xs:attributeGroup ref="chdesc.attributes"/>
   </xs:complexType>
   
   <xs:group name="chdesc.content">
     <xs:sequence>
       <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:group ref="tblcell.cnt" minOccurs="0"/>
    </xs:choice>
     </xs:sequence>
   </xs:group>
   
   <xs:attributeGroup name="chdesc.attributes">
     <xs:attribute name="outputclass" type="xs:string"/>
    <xs:attribute name="specentry" type="xs:string"/>
    <xs:attributeGroup ref="univ-atts"/>
    <xs:attributeGroup ref="global-atts"/>
   </xs:attributeGroup>

</xs:schema>
