<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is part of the DITA Open Toolkit project.
     See the accompanying license.txt file for applicable licenses.-->
<!-- (c) Copyright IBM Corp. 2006 All Rights Reserved. -->
<project name="dita2htmlhelp">

  <target name="dita2htmlhelp" unless="noMap"
          depends="dita2htmlhelp.init,
                   build-init,
                   use-init.envhhcdir,
                   use-init.hhcdir,
                   preprocess,
                   xhtml.topics,
                   copy-css">
    <antcall target="dita.map.htmlhelp"/>
    <antcall target="dita.htmlhelp.convertlang"/>
    <antcall target="compile.HTML.Help"/>
  </target>

  <target name="dita2htmlhelp.init">
    <property name="html-version" value="html"/>
  </target>

  <target name="use-init.envhhcdir" if="env.HHCDIR">
    <available file="${env.HHCDIR}/hhc.exe"
               property="HTMLHelpCompiler"
               value="${env.HHCDIR}${file.separator}hhc.exe"/>
  </target>

  <target name="use-init.hhcdir" unless="env.HHCDIR">
    <condition property="hhc.dir"
               value="C:\Program Files (x86)\HTML Help Workshop"
               else="C:\Program Files\HTML Help Workshop">
      <available file="C:\Program Files (x86)\HTML Help Workshop" type="dir"/>
    </condition>
    <available file="${hhc.dir}/hhc.exe"
               property="HTMLHelpCompiler"
               value="${hhc.dir}${file.separator}hhc.exe"/>
  </target>

  <target name="dita.map.htmlhelp"
          depends="dita.map.htmlhelp.init,
                   dita.map.htmlhelp.hhp,
                   dita.map.htmlhelp.hhc,
                   dita.map.htmlhelp.hhk,
                   dita.out.map.htmlhelp.hhp,
                   dita.out.map.htmlhelp.hhc,
                   dita.out.map.htmlhelp.hhk"/> 

  <target name="dita.map.htmlhelp.init" description="Init properties for HTMLHelp">
    <condition property="out.ext" value=".html">
      <not>
        <isset property="out.ext"/>
      </not>
    </condition>
  </target>

  <target name="dita.map.htmlhelp.hhp" depends="dita.map.htmlhelp.init" if="old.transform"
          description="Build HTMLHelp HHP file">
    <xslt basedir="${dita.temp.dir}"
          destdir="${output.dir}"
          includesfile="${dita.temp.dir}/${user.input.file.listfile}"
          extension=".hhp"
          classpathref="dost.class.path"
          style="${dita.plugin.org.dita.htmlhelp.dir}/xsl/map2hhp.xsl">
      <excludesfile name="${dita.temp.dir}/${resourceonlyfile}" if="resourceonlyfile"/>
      <param name="OUTEXT" expression="${out.ext}" if="out.ext"/>
      <param name="HHCNAME" expression="${dita.map.filename.root}.hhc"/>
      <param name="INCLUDEFILE" expression="${args.htmlhelp.includefile}" if="args.htmlhelp.includefile"/>
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>

  <target name="dita.out.map.htmlhelp.hhp" depends="dita.map.htmlhelp.init" if="inner.transform"
          description="Build HTMLHelp HHP file">
    <xslt basedir="${dita.temp.dir}"
          destdir="${output.dir}"
          includesfile="${dita.temp.dir}/${user.input.file.listfile}"
          classpathref="dost.class.path"
          style="${dita.plugin.org.dita.htmlhelp.dir}/xsl/map2hhp.xsl">
      <excludesfile name="${dita.temp.dir}/${resourceonlyfile}" if="resourceonlyfile"/>
      <param name="OUTEXT" expression="${out.ext}" if="out.ext"/>
      <param name="HHCNAME" expression="${dita.map.filename.root}.hhc"/>
      <param name="INCLUDEFILE" expression="${args.htmlhelp.includefile}" if="args.htmlhelp.includefile"/>
      <mapper type="glob" from="${user.input.file}" to="${dita.map.filename.root}.hhp"/>
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>

  <target name="dita.map.htmlhelp.hhc" depends="dita.map.htmlhelp.init" if="old.transform"
          description="Build HTMLHelp HHC file">
    <xslt basedir="${dita.temp.dir}"
          destdir="${output.dir}"
          includesfile="${dita.temp.dir}/${user.input.file.listfile}"
          extension=".hhc"
          classpathref="dost.class.path"
          style="${dita.plugin.org.dita.htmlhelp.dir}/xsl/map2hhc.xsl">
      <excludesfile name="${dita.temp.dir}/${resourceonlyfile}" if="resourceonlyfile"/>
      <param name="OUTEXT" expression="${out.ext}" if="out.ext"/>
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>

  <target name="dita.out.map.htmlhelp.hhc" depends="dita.map.htmlhelp.init" if="inner.transform"
          description="Build HTMLHelp HHC file">
    <xslt basedir="${dita.temp.dir}"
          destdir="${output.dir}"
          includesfile="${dita.temp.dir}/${user.input.file.listfile}"
          classpathref="dost.class.path"
          style="${dita.plugin.org.dita.htmlhelp.dir}/xsl/map2hhc.xsl">
      <excludesfile name="${dita.temp.dir}/${resourceonlyfile}" if="resourceonlyfile"/>
      <param name="OUTEXT" expression="${out.ext}" if="out.ext"/>
      <mapper type="glob" from="${user.input.file}" to="${dita.map.filename.root}.hhc"/>
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>

  <target name="dita.map.htmlhelp.hhk" depends="dita.map.htmlhelp.init" if="old.transform"
          description="Build HTMLHelp HHK file">
    <pipeline message="Extract index term." tempdir="${dita.temp.dir}" inputmap="${user.input.file}">
      <module class="org.dita.dost.module.IndexTermExtractModule">
        <param name="output" location="${output.dir}/${user.input.file}"/>
        <param name="targetext" value="${out.ext}"/>
        <param name="indextype" value="htmlhelp"/>
        <param name="encoding" value="${args.dita.locale}" if="args.dita.locale"/>
      </module>
    </pipeline>
  </target>

  <target name="dita.out.map.htmlhelp.hhk" depends="dita.map.htmlhelp.init" if="inner.transform"
          description="Build HTMLHelp HHK file">
    <pipeline message="Extract index term." tempdir="${dita.temp.dir}" inputmap="${user.input.file}">
      <module class="org.dita.dost.module.IndexTermExtractModule">
        <param name="output" location="${output.dir}/${dita.map.filename.root}.hhk"/>
        <param name="targetext" value="${out.ext}"/>
        <param name="indextype" value="htmlhelp"/>
        <param name="encoding" value="${args.dita.locale}" if="args.dita.locale"/>
      </module>
    </pipeline>
  </target>

  <target name="dita.htmlhelp.convertlang">
    <taskdef name="check-lang" classname="org.dita.dost.util.CheckLang">
      <classpath refid="dost.jar.path"/>
    </taskdef>
    <taskdef name="convert-lang" classname="org.dita.dost.util.ConvertLang">
      <classpath refid="dost.jar.path"/>
    </taskdef>
    <check-lang message="Check Language"
                basedir="${basedir}"
                tempdir="${dita.temp.dir}"
                inputmap="${user.input.file}"
                outputdir="${output.dir}"/>
    <convert-lang message="Convert Language"
                  basedir="${basedir}"
                  outputdir="${output.dir}"
                  langcode="${htmlhelp.locale}"/>
  </target>

  <target name="compile.HTML.Help" if="HTMLHelpCompiler" description="Compile HTMLHelp output">
    <condition property="compile.dir" value="${output.dir}">
      <isset property="inner.transform"/>
    </condition>
    <condition property="compile.dir" value="${dita.map.output.dir}">
      <isset property="old.transform"/>
    </condition>
    <exec executable="${HTMLHelpCompiler}"
          failonerror="${failonerror}"
          failifexecutionfails="${failonerror}">
      <arg value="${compile.dir}${file.separator}${dita.map.filename.root}.hhp"/>
    </exec>
  </target>

</project>
