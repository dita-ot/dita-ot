<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2010, v.4002-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<?Pub Sty _display FontColor="red"?>
<concept id="evaluating" xml:lang="en-us">
<title>Evaluating the DITA Open Toolkit (Full Easy Install)</title>
  <titlealts>
    <navtitle>Evaluating the DITA Open Toolkit</navtitle>
  </titlealts>
<abstract><shortdesc>The most common scenario for first users of the DITA Open Toolkit is to
      evaluate how it functions.</shortdesc>Previous versions of the Toolkit required a number of
    preliminary installation steps for components necessary both to run the base function and to
    show off additional output capabilities. For each release since DITA-OT 1.4.2, three versions of
    the Toolkit are available: the minimal package (contains core function only), standard package
    (minimal plus docs and demos), and a &quot;full easy install package&quot; that basically
    installs everything you need to enable quick and easy evaluation of the Toolkit. This topic
    deals with installing and using the full easy install package for the first time.</abstract>
<conbody>
<note>This topic explains how to use the Full Easy Install on Windows; the three versions are also
      available on all other supported platforms. For a description of all packages available, see
  <xref href="distribution_packages.dita"/></note>
<p>Unzip or extract the &quot;full_easy_install&quot; zip file to a convenient directory, such as
      your C: drive&apos;s root directory. The package will create a directory such as
          <filepath>C:\DITA-OT<keyword keyref="release.version"/>\</filepath> that contains not only
      the usual Toolkit materials but also all the run-time components needed to run the Toolkit in
      a basic evaluation mode.</p>
<p>Browse over to this new directory and double-click on the <filepath>startcmd.bat</filepath> file
      in that directory. A new <wintitle>Command Prompt</wintitle> window will open up, with the
      environment variables already set to enable the Toolkit to run within that shell.</p>
  <p>At the command prompt (usually <filepath>C:\DITA-OT<keyword keyref="release.version"
        />\</filepath> for this version), type &quot;ant samples.web -f build_demo.xml&quot;. After
      a series of processing messages, there should be a new <filepath>out\</filepath> directory in
      the <filepath>DITA-OT<keyword keyref="release.version"/>\</filepath> directory that contains a
      folder with the resulting HTML output in it. Congratulations on creating your first example of
      DITA output!</p>
<p>Now try the full set of transforms from a single command: <codeph>ant all -f
        build_demo.xml</codeph>. This command will process DITA samples in the toolkit into many of
      the supported output types for the Toolkit. After a much longer flurry of messages, the
        <filepath>out\</filepath> directory should have a number of folders in it, each with several
      deliverables produced by the Toolkit demos. If you happen to have the Microsoft Compiled HTML
      Help Workshop or the JavaHelp toolset installed for other work you have done with User
      Assistance, you might even get ready-to use CHM and JavaHelp output files. By comparing the
      outputs with the various source materials in the distribution, you can get an idea about how
      the processing
      works.<!-- That explanation is best found in the DITA Open Toolkit User Guide and at the <xref
        format="HTML" href="http://dita.xml.org/wiki/the-dita-open-toolkit" scope="external">DITA-OT
        Focus Area</xref>.--></p>
<section><title>Demo targets</title><p>Here are the individual demo targets that you can try while evaluating the DITA Open Toolkit.
        Note that most are subcomponents of larger operationsâ€”you can use any of these
        individually.</p>
      <note>Earlier releases also contained demo targets for building the DITA 1.1 Language
        Specification, but that was removed in DITA-OT 1.5.2 because it was superseded by the DITA
        1.2 specification.</note>
  <dl>
    <dlentry><dt>all</dt><dd>Build all output</dd></dlentry>
    <dlentry><dt>doc</dt><dd>Build the documentation</dd></dlentry>
    <dlentry><dt>doc.articles.chm</dt><dd>Build the articles of dita to Microsoft Compiled HTML Help</dd></dlentry>
    <dlentry><dt>doc.articles.pdf</dt><dd>Build the articles of dita to PDF</dd></dlentry>
    <dlentry><dt>doc.articles.web</dt><dd>Build the articles of dita to XHTML</dd></dlentry>
    <dlentry><dt>docbook</dt><dd>Transform the samples to DocBook</dd></dlentry>
    <dlentry><dt>prompt</dt><dd>Prompt to build anything</dd></dlentry>
    <dlentry><dt>samples</dt><dd>Build the sample output</dd></dlentry>
    <dlentry><dt>samples.eclipse</dt><dd>Build the samples for Eclipse</dd></dlentry>
    <dlentry><dt>samples.htmlhelp</dt><dd>Build the samples for Microsoft Compiled HTML Help</dd></dlentry>
    <dlentry><dt>samples.javahelp</dt><dd>Build the samples for JavaHelp</dd></dlentry>
    <dlentry><dt>samples.pdf</dt><dd>Build the samples as PDF</dd></dlentry>
    <dlentry><dt>samples.troff</dt><dd>Build the samples as troff</dd></dlentry>
    <dlentry><dt>samples.web</dt><dd>Build the samples to XHTML</dd></dlentry>
        <dlentry>
          <dt>clean</dt>
          <dd>Delete all output</dd>
        </dlentry>
        <dlentry>
          <dt>clean.doc</dt>
          <dd>Remove the documentation output</dd>
        </dlentry>
        <dlentry>
          <dt>clean.doc.articles</dt>
          <dd>Delete the articles directory in doc.</dd>
        </dlentry>
        <dlentry>
          <dt>clean.docbook</dt>
          <dd>Remove the docbook output</dd>
        </dlentry>
        <dlentry>
          <dt>clean.samples</dt>
          <dd>Remove the sample output</dd>
        </dlentry>
        <dlentry>
          <dt>clean.samples.eclipse</dt>
          <dd>Remove the sample Eclipse output</dd>
        </dlentry>
        <dlentry>
          <dt>clean.samples.htmlhelp</dt>
          <dd>Remove the sample Microsoft Compiled HTML Help output</dd>
        </dlentry>
        <dlentry>
          <dt>clean.samples.javahelp</dt>
          <dd>Remove the sample JavaHelp output</dd>
        </dlentry>
        <dlentry>
          <dt>clean.samples.pdf</dt>
          <dd>Remove the sample PDF output</dd>
        </dlentry>
        <dlentry>
          <dt>clean.samples.web</dt>
          <dd>Remove the sample XHTML output</dd>
        </dlentry>
  </dl>
  <p>If
you do not specify a target for <filepath>build_demo.xml</filepath>,
the default target is <codeph>prompt</codeph>. </p><p>You can also try your hand at modifying some of the sample scripts in the ant directory. These
        represent the kind of driver files that you would create for your own projects. You can
        easily adapt these to process your own test DITA files, for example. Call the other Ant
        samples after this example: </p><pre platform="windows">C:\DITA-OT<keyword keyref="release.version"/>>ant -f samples\ant_sample\sample_xhtml.xml</pre>
  <note>This is basically the same as running <codeph>ant samples.web -f build_demo.xml</codeph>, but
        intended for you to modify. </note><p>You
will find the output for this exercise in the <filepath>samples/ant_sample/</filepath> directory
itself. You can add parameters to the <filepath>sample_xhtml.xml</filepath> file
to change where your outputs end up, and also to modify the build
process in other ways. See the documentation for Ant parameters to
learn more about processing options.</p></section>
</conbody>
  <related-links>
    <link href="dita-ot_ant_properties.dita"/>
  </related-links>
</concept>
<?Pub *0000006946?>
