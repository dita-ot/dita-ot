<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<?Pub Inc?>
<reference id="plugin-overridestyle" xml:lang="en-us">
<title>Override styles with XSLT</title>
<shortdesc>The XSLT import extension points are used to override various
steps of XSLT processing. For         this, the extension attribute
indicates the step that the override applies to; the <codeph>file</codeph> attribute
is a relative path to the override within the current plugin. The plugin
installer will add an XSL import statement to the default code so
that your override becomes a part of the normal build.</shortdesc>
<refbody>
<section>       <p>The following XSLT steps are available to override
in the core toolkit: </p><dl><dlentry>
<dt><codeph>dita.xsl.xhtml</codeph></dt>
<dd>Overrides default (X)HTML output (including HTML Help and Eclipse
Help). The referenced file is integrated directly into the XSLT step
that generates XHTML.</dd>
</dlentry><dlentry>
<dt><codeph>dita.xsl.xslfo</codeph></dt>
<dd>Overrides default PDF output (formerly known as PDF2).  The referenced
file is integrated directly into the XSLT step that generates XSL-FO
for PDF.</dd>
</dlentry><dlentry>
<dt><codeph>dita.xsl.docbook</codeph></dt>
<dd>Overrides default DocBook output.</dd>
</dlentry><dlentry>
<dt><codeph>dita.xsl.rtf</codeph></dt>
<dd>Overrides default RTF output.</dd>
</dlentry><dlentry>
<dt><codeph>dita.xsl.eclipse.plugin</codeph></dt>
<dd>Overrides the step that generates plugin.xml for Eclipse.</dd>
</dlentry><dlentry>
<dt><codeph>dita.xsl.conref</codeph></dt>
<dd>Overrides the preprocess step that resolves conref.</dd>
</dlentry><dlentry>
<dt><codeph>dita.xsl.topicpull</codeph></dt>
<dd>Overrides the preprocess step "topicpull" (the step that pulls
text into &lt;xref> elements, among other things).</dd>
</dlentry><dlentry>
<dt><codeph>dita.xsl.mapref</codeph></dt>
<dd>Overrides the preprocess step "mapref" (the step that resolves
references to other maps).</dd>
</dlentry><dlentry>
<dt><codeph>dita.xsl.mappull</codeph></dt>
<dd>Overrides the preprocess step "mappull" (the step that updates
navtitles in maps and causes             attributes to cascade).</dd>
</dlentry><dlentry>
<dt><codeph>dita.xsl.maplink</codeph></dt>
<dd>Overrides the preprocess step "maplink" (the step that generates
map-based links).</dd>
</dlentry><dlentry importance="deprecated">
<dt><codeph>dita.xsl.fo</codeph></dt>
<dd>Override the (now deprecated) original PDF output, which is still
available with the transform type "legacypdf".</dd>
</dlentry></dl>       </section>
<example><title>Example</title><p>The following two files represent
a complete, simple style plug-in. The <filepath>plugin.xml</filepath> file
declares an XSLT file that extends XHTML processing; the XSLT file
overrides default header processing to provide a (theoretical) banner.</p><codeblock>plugin.xml:
&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;plugin id="com.example.brandheader">
  &lt;feature extension="dita.xsl.xhtml" file="xsl/header.xsl"/>
&lt;/plugin>

xsl/header.xsl:
&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;xsl:stylesheet version="1.0" 
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  &lt;xsl:template name="gen-user-header">
    &lt;div>&lt;img src="http://www.example.com/company_banner.jpg" 
              alt="Example Company Banner"/>&lt;/div>
  &lt;/xsl:template>
&lt;/xsl:stylesheet></codeblock><?Pub Caret 410?></example>
</refbody>
</reference>
<?Pub *0000003622?>
