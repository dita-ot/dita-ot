<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="dita2pdf-customization" xml:lang="en">
  <title>Customizing PDF output</title>
  <shortdesc>Example of PDF output customization with a custom transformation type.</shortdesc>
  <taskbody>
    <steps>
      <step>
        <cmd>Create a new plug-in directory <filepath>com.example.print-pdf</filepath> into DITA-OT
            <filepath>plugins</filepath> directory.</cmd>
      </step>
      <step>
      <cmd>Create a plug-in configuration file <filepath>plugin.xml</filepath>, declare the new
          transformation type <keyword>print-pdf</keyword> and dependencies.</cmd>
      <info><fig><codeblock>&lt;?xml version='1.0' encoding='UTF-8'?>
&lt;plugin id="com.example.print-pdf">
  &lt;require plugin="org.dita.pdf2"/>
  &lt;feature extension="dita.conductor.transtype.check" value="print-pdf"/>
  &lt;feature extension="dita.transtype.print" value="print-pdf"/>
  &lt;feature extension="dita.conductor.target.relative" file="integrator.xml"/>
&lt;/plugin></codeblock></fig></info>
      </step>
      <step>
      <cmd>Add an Ant script <filepath>integrator.xml</filepath> to define the transformation
          type.</cmd>
      <info><codeblock>&lt;?xml version='1.0' encoding='UTF-8'?>
&lt;project name="com.example.print-pdf">
  &lt;target name="dita2print-pdf.init">
    &lt;property name="customization.dir" location="${dita.plugin.com.example.print-pdf.dir}/cfg"/>
  &lt;/target>
  &lt;target name="dita2print-pdf" depends="dita2print-pdf.init, dita2pdf2"/>
&lt;/project></codeblock></info>
      </step>
      <step>
      <cmd>Add a <filepath>cfg/catalog.xml</filepath> file to take custom XSLT stylesheets into
          use.</cmd>
      <info><codeblock>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;catalog prefer="system" xmlns="urn:oasis:names:tc:entity:xmlns:xml:catalog">
  &lt;uri name="cfg:fo/attrs/custom.xsl" uri="fo/attrs/custom.xsl"/>
  &lt;uri name="cfg:fo/xsl/custom.xsl" uri="fo/xsl/custom.xsl"/>
&lt;/catalog></codeblock></info>
      </step>
      <step>
      <cmd>Add attribute and variable overrides to
          <filepath>cfg/fo/attrs/custom.xsl</filepath></cmd>
     <info> <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="2.0">
  &lt;!-- Change page size to A4 -->
  &lt;xsl:variable name="page-width">210mm&lt;/xsl:variable>
  &lt;xsl:variable name="page-height">297mm&lt;/xsl:variable>
&lt;/xsl:stylesheet></codeblock></info>
      </step>
      <step>
        <cmd>Add XSLT overrides to <filepath>cfg/fo/xsl/custom.xsl</filepath></cmd>
        <info>
          <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:xs="http://www.w3.org/2001/XMLSchema"
                xmlns:fo="http://www.w3.org/1999/XSL/Format"
                version="2.0">
  &lt;!-- Move figure title to top and description to bottom -->
  &lt;xsl:template match="*[contains(@class,' topic/fig ')]">
    &lt;fo:block xsl:use-attribute-sets="fig">
      &lt;xsl:call-template name="commonattributes"/>
      &lt;xsl:if test="not(@id)">
        &lt;xsl:attribute name="id">
          &lt;xsl:call-template name="get-id"/>
        &lt;/xsl:attribute>
      &lt;/xsl:if>
      &lt;xsl:apply-templates select="*[contains(@class,' topic/title ')]"/>
      &lt;xsl:apply-templates select="*[not(contains(@class,' topic/title ') or contains(@class,' topic/desc '))]"/>
      &lt;xsl:apply-templates select="*[contains(@class,' topic/desc ')]"/>
    &lt;/fo:block>
  &lt;/xsl:template>
&lt;/xsl:stylesheet></codeblock>
        </info>
      </step>
      <step>
        <cmd>Add variable definition file <filepath>cfg/common/vars/en.xml</filepath> for English to
          override generated text.</cmd>
        <info>
          <codeblock>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;vars xmlns="http://www.idiominc.com/opentopic/vars">
  &lt;!-- Remove dot from list number -->
  &lt;variable id="Ordered List Number">&lt;param ref-name="number"/>&lt;/variable>
  &lt;!-- Change unordered list bullet to an em dash -->
  &lt;variable id="Unordered List bullet">&amp;#x2014;&lt;/variable>
&lt;/vars></codeblock>
        </info>
      </step>
    </steps>
    <result id="result_23y_yv3_tf">
      <p>The plug-in directory should have the layout and files:</p>
      <codeblock>com.example.print-pdf/
  cfg/
    common/
      vars/
        en.xml
    fo/
      attrs/
        custom.xsl
      xsl/
        custom.xsl
    catalog.xml
  integrator.xml
  plugin.xml</codeblock>
    </result>
    <postreq id="postreq_mqj_zz3_tf">
      <p>Run integration process to install the plug-in and take the <keyword>print-pdf</keyword>
        transformation type into use.</p>
    </postreq>
  </taskbody>
</task>
